plugins {
  id 'java'
  id 'maven-publish'
  id 'checkstyle'
  id 'java-library'
  id 'io.spring.dependency-management' version '1.1.7'
}

def buildNumber = System.getenv("RELEASE_VERSION")?: "DEV-SNAPSHOT"

group = 'com.github.hmcts'
version buildNumber

checkstyle {
  toolVersion = '10.21.0'
  maxWarnings = 0
  getConfigDirectory().set(new File(rootDir, "config/checkstyle"))
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = uri('https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1')
  }
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
  }
}

tasks.register('printVersion') {
  doLast {
    print project.version
  }
}

def pomConfig = {
  licenses {
    license {
      name "MIT License"
      url "http://www.opensource.org/licenses/mit-license.php"
      distribution "repo"
    }
  }

  scm {
    url "https://github.com/hmcts/cmc-pdf-service-client"
  }
}

tasks.register('sourcesJar', Jar) {
  dependsOn classes
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
  dependsOn javadoc
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

publishing {
  publications {
    Main(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      groupId = project.group
      artifactId = 'pdf-service-client'
      version = project.version

      pom.withXml {
        def root = asNode()
        root.appendNode('description', 'Client library for communicating with cmc-pdf-service')
        root.appendNode('name', 'Platform PDF service client')
        root.appendNode('url', 'https://github.com/hmcts/cmc-pdf-service-client')
        root.children().last() + pomConfig
      }
    }
  }
  repositories {
    maven {
      name = "AzureArtifacts"
      url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
      credentials {
        username = System.getenv("AZURE_DEVOPS_ARTIFACT_USERNAME")
        password = System.getenv("AZURE_DEVOPS_ARTIFACT_TOKEN")
      }
    }
  }
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}

def springBootVersion = '3.4.5'

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'com.github.hmcts.java-logging:logging:6.1.9'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
